{"version":3,"sources":["Base64Image.tsx"],"names":["Base64Image","props","scale","dx","dy","base64","atlasDescriptor","frameDescriptor","clipPath","refMethod","Shape","displayName","defaultProps","RNSVGBase64Image"],"mappings":"2zBAAA,oDAEA,yCACA,kFACA,uDAGA,yF,6KAEqBA,CAAAA,W,oUAuCV,IACCC,CAAAA,KADD,CACW,IADX,CACCA,KADD,IAECC,CAAAA,KAFD,CAEuED,KAFvE,CAECC,KAFD,CAEQC,EAFR,CAEuEF,KAFvE,CAEQE,EAFR,CAEYC,EAFZ,CAEuEH,KAFvE,CAEYG,EAFZ,CAEgBC,MAFhB,CAEuEJ,KAFvE,CAEgBI,MAFhB,CAEwBC,eAFxB,CAEuEL,KAFvE,CAEwBK,eAFxB,CAEyCC,eAFzC,CAEuEN,KAFvE,CAEyCM,eAFzC,CAE0DC,QAF1D,CAEuEP,KAFvE,CAE0DO,QAF1D,CAGP,MACE,8BAAC,gBAAD,wBACE,GAAG,CAAE,KAAKC,SADZ,EAEM,8BAAiBR,KAAjB,CAAwB,IAAxB,CAFN,CAGM,0BAAa,iCAAeA,KAAf,CAAb,CAAoC,IAApC,CAHN,EAIE,KAAK,CAAEC,KAJT,CAKE,EAAE,CAAEC,EALN,CAME,EAAE,CAAEC,EANN,CAOE,MAAM,CAAEC,MAPV,CAQE,eAAe,CAAEC,eARnB,CASE,eAAe,CAAEC,eATnB,CAUE,QAAQ,CAAEC,QAVZ,kDADF,CAcD,C,yBAxDsCE,e,8BAApBV,W,CAUZW,W,CAAc,a,CAVFX,W,CAwBZY,Y,CAAe,CACpBV,KAAK,CAAE,CADa,CAEpBC,EAAE,CAAE,CAFgB,CAGpBC,EAAE,CAAE,CAHgB,CAIpBC,MAAM,CAAE,EAJY,CAKpBC,eAAe,CAAE,EALG,CAMpBC,eAAe,CAAE,EANG,CAOpBC,QAAQ,CAAE,EAPU,C,CAmCjB,GAAMK,CAAAA,gBAAgB,CAAG,wCAAuB,kBAAvB,CAAzB,C","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\nimport { requireNativeComponent } from 'react-native';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport Shape from './Shape';\n// import { touchableProps, responderProps } from '../lib/props';\nimport { NumberProp, ResponderInstanceProps, ResponderProps } from '../lib/extract/types';\nimport extractResponder from '../lib/extract/extractResponder';\n\nexport default class Base64Image extends Shape<{\n  scale?: NumberProp;\n  dx?: NumberProp;\n  dy?: NumberProp;\n  base64: string;\n  atlasDescriptor: string;\n  frameDescriptor: string;\n  clipPath: string;\n} & ResponderProps\n> {\n  static displayName = 'Base64Image';\n\n  // now all in responder props?\n  // static propTypes = {\n  //   ...responderProps,\n  //   ...touchableProps,\n  //   scale: PropTypes.number,\n  //   dx: PropTypes.number,\n  //   dy: PropTypes.number,\n  //   base64: PropTypes.string.isRequired,\n  //   atlasDescriptor: PropTypes.string.isRequired,\n  //   frameDescriptor: PropTypes.string.isRequired,\n  // };\n\n  static defaultProps = {\n    scale: 1,\n    dx: 0,\n    dy: 0,\n    base64: '',\n    atlasDescriptor: '',\n    frameDescriptor: '',\n    clipPath: '',\n  };\n\n  // is it required or just old style?\n  // setNativeProps = (...args) => {\n  //   this.root && this.root.setNativeProps(...args);\n  // };\n\n  render() {\n    const { props } = this;\n    const { scale, dx, dy, base64, atlasDescriptor, frameDescriptor, clipPath } = props;\n    return (\n      <RNSVGBase64Image\n        ref={this.refMethod}\n        {...extractResponder(props, this as ResponderInstanceProps)}\n        {...extractProps(propsAndStyles(props), this)}\n        scale={scale}\n        dx={dx}\n        dy={dy}\n        base64={base64}\n        atlasDescriptor={atlasDescriptor}\n        frameDescriptor={frameDescriptor}\n        clipPath={clipPath}\n      />\n    );\n  }\n}\n\nexport const RNSVGBase64Image = requireNativeComponent('RNSVGBase64Image');\n"]}